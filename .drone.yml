workspace:
  base: /go
  path: src/code.gitea.io/gitea

clone:
  git:
    image: plugins/git:next
    depth: 50
    tags: true

pipeline:
  pre-build:
    image: webhippie/nodejs:latest
    pull: true
    commands:
      - npm install
      - make stylesheets-check
    when:
      event: [ push, tag, pull_request ]

  build-without-gcc:
    image: golang:1.9
    pull: true
    commands:
      - go build -o gitea_no_gcc # test if build succeeds without the sqlite tag
    when:
      event: [ push, tag, pull_request ]

  build:
    image: golang:1.11
    pull: true
    environment:
      TAGS: bindata sqlite sqlite_unlock_notify
    commands:
      - make clean
      - make generate
      - make vet
      - make lint
      - make fmt-check
      - make swagger-check
      - make swagger-validate
      - make misspell-check
      - make test-vendor
      - make build
    when:
      event: [ push, tag, pull_request ]

  test:
    image: golang:1.11
    pull: true
    group: test
    environment:
      TAGS: bindata sqlite sqlite_unlock_notify
    commands:
      - make unit-test-coverage
    when:
      event: [ push, pull_request ]
      branch: [ master ]

  test-sqlite:
    image: golang:1.11
    pull: true
    group: test
    environment:
      TAGS: bindata
    commands:
      - curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | bash
      - apt-get install -y git-lfs
      - (sleep 1200 && (echo 'kill -ABRT $(pidof gitea) $(pidof integrations.sqlite.test)' | sh)) &
      - make test-sqlite-migration
      - make test-sqlite
    when:
      event: [ push, tag, pull_request ]

  test-mysql:
    image: golang:1.11
    pull: true
    group: test
    environment:
      TAGS: bindata
      TEST_LDAP: "1"
    commands:
      - curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | bash
      - apt-get install -y git-lfs
      - make test-mysql-migration
      - make integration-test-coverage
    when:
      event: [ push, pull_request ]

  test-pgsql:
    image: golang:1.11
    pull: true
    group: test
    environment:
      TAGS: bindata
      TEST_LDAP: "1"
    commands:
      - curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | bash
      - apt-get install -y git-lfs
      - (sleep 1200 && (echo 'kill -ABRT $(pidof gitea) $(pidof integrations.test)' | sh)) &
      - make test-pgsql-migration
      - make test-pgsql
    when:
      event: [ push, tag, pull_request ]

  test-mssql:
    image: golang:1.11
    pull: true
    group: test
    environment:
      TAGS: bindata
      TEST_LDAP: "1"
    commands:
      - curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | bash
      - apt-get install -y git-lfs
      - make test-mssql-migration
      - make test-mssql
    when:
      event: [ push, tag, pull_request ]

  bench-sqlite:
    image: golang:1.11
    pull: true
    group: bench
    commands:
      - make bench-sqlite
    when:
      event: [ tag ]

  bench-mysql:
    image: golang:1.11
    pull: true
    group: bench
    commands:
      - make bench-mysql
    when:
      event: [ tag ]

  bench-mssql:
    image: golang:1.11
    pull: true
    group: bench
    commands:
      - make bench-mssql
    when:
      event: [ tag ]

  bench-pgsql:
    image: golang:1.11
    pull: true
    group: bench
    commands:
      - make bench-pgsql
    when:
      event: [ tag ]

  generate-coverage:
    image: golang:1.11
    pull: true
    environment:
      TAGS: bindata
    commands:
      - make coverage
    when:
      event: [ push, pull_request ]
      branch: [ master ]

  coverage:
    image: robertstettner/drone-codecov
    secrets: [ codecov_token ]
    files:
      - coverage.all
    when:
      event: [ push, pull_request ]
      branch: [ master ]

  static:
    image: techknowlogick/xgo:latest
    pull: true
    environment:
      TAGS: bindata sqlite sqlite_unlock_notify
    commands:
      - export PATH=$PATH:$GOPATH/bin
      - make release
    when:
      event: [ push, tag ]

  build-docs:
    image: webhippie/hugo:latest
    pull: true
    commands:
      - cd docs
      - make trans-copy
      - make clean
      - make build

services:
  mysql:
    image: mysql:5.7
    environment:
      - MYSQL_DATABASE=test
      - MYSQL_ALLOW_EMPTY_PASSWORD=yes
    when:
      event: [ push, tag, pull_request ]

  pgsql:
    image: postgres:9.5
    environment:
      - POSTGRES_DB=test
    when:
      event: [ push, tag, pull_request ]

  mssql:
    image: microsoft/mssql-server-linux:latest
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=MwantsaSecurePassword1
      - MSSQL_PID=Standard
    when:
      event: [ push, tag, pull_request ]

  ldap:
    image: gitea/test-openldap:latest
    when:
      event: [ push, tag, pull_request ]
